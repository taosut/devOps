INSTALL GIT SCM SERVER
# yum install git-core
# sudo useradd <user>
# sudo passwd <user>

SSH KEY FOR GIT
# ssh-keygen -t rsa -C "key of truongnv@mpsoftware.com.vn"
# cat ~/.ssh/id_rsa.pub | ssh <user>@192.168.50.71 "mkdir -p ~/.ssh && cat >>  ~/.ssh/authorized_keys"

INIT GIT 
# sudo su <user>
# mkdir -p /home/<user>/project-example.git
# cd /home/<user>/project-example.git
# git init --bare
Initialized empty Git repository in /home/<user>/project-example.git


GIT CLONE
$ git clone <user>@192.168.50.71:project-example.git

git@192.168.50.71:mps-ts/UID.git

GIT PUSH (The first push remote origin/master)
$ git add -A 
$ git commit -m "The first commit"
$ git remote add origin <user>@192.168.50.71:project-example.git 
$ git push

GIT PUSH 
$ git branch -v
$ git add -A
$ git commit -m "blah blah"
$ git push


GIT PUSH NEW BRANCH ON REMOTE
$ git checkout -b <branchname> <remote/branchname>
$ git add -A 
$ git commit -m "commit new branch"
$ git push --set-upstream origin <branchname>


CHECK REMOTE BRANCH EXIST
$ git ls-remote

GIT PULL (SELECT BRANCH NEED PULL)
$ git checkout <branchname> (OPTION)
$ git pull


GIT PULL & CREATE BRANCH LOCAL
$ git checkout -b <branchname>
$ git branch --set-upstream-to=origin/<remote/branchname> <branchname>
$ git pull


RESET BRANCH
$ git reset --hard origin/<branchname>

GIT STASH (save everything changed on branch but not commit)
$ git stash save "stash config file"  (reset changed branch current, save changed to stash)
$ git stash list -p
$ git stash show stash@{0}
$ git stash apply stash@{0}  (apply to branch current, stash exist)
$ git stash pop stash@{0}  (apply to branch current, delete stash)
$ git stash clear (delete all stash)


GIT MERGE (merge branch 'develop' -> 'master')
$ git branch master
$ git merge develop


GIT ADD
$ git add . (all file exist & all file new create)
$ git add -u . (all file exist & all file deleted)
$ git add -A | --all . (all file exist & all file new created - deleted)


GIT CONFIG
# nano ~/.gitconfig


NOTE: GitLab OCCUPY PERMISSION ON /home/<user>

CAP QUYEN CHO GIT USER 
# chmod 755 /home/git
# chmod 0644 /home/git/.bashrc


GIT PROBLEMS NO BRANCH MASTER
# sudo chmod -R g+ws * /home/git/uid.git
# sudo chown -R "git:git" * /home/git/uid.git/objects (sudo chown -R <username>:<username> *)
# sudo chmod -R 755 /home/git/uid.git/objects


MASTER KHONG COMMIT
# cd /home/git/uid.git
# git config --bool core.bare true 




